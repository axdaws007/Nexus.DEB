// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nexus.DEB.Infrastructure.Persistence;

#nullable disable

namespace Nexus.DEB.Infrastructure.Migrations
{
    [DbContext(typeof(DebContext))]
    [Migration("20251031151231_MakeSerialNumberColumnNullable")]
    partial class MakeSerialNumberColumnNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Common.EntityHead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityTypeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<Guid>("LastModifiedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OwnedByGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OwnedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityHead", "common");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.RequirementCategory", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RequirementCategory", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.RequirementType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RequirementType", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReferenceDisplayed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTitleDisplayed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentSectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reference")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StandardVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ParentSectionId");

                    b.HasIndex("StandardVersionId");

                    b.ToTable("Section", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.SectionRequirement", b =>
                {
                    b.Property<Guid>("SectionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RequirementID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.HasKey("SectionID", "RequirementID");

                    b.HasIndex("RequirementID");

                    b.ToTable("SectionRequirement", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Standard", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Standard", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.TaskType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TaskType", "deb");
                });

            modelBuilder.Entity("ScopeRequirement", b =>
                {
                    b.Property<Guid>("RequirementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScopeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RequirementId", "ScopeId");

                    b.HasIndex("ScopeId");

                    b.ToTable("ScopeRequirement", "deb");
                });

            modelBuilder.Entity("StandardVersionRequirement", b =>
                {
                    b.Property<Guid>("RequirementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StandardVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RequirementId", "StandardVersionId");

                    b.HasIndex("StandardVersionId");

                    b.ToTable("StandardVersionRequirement", "deb");
                });

            modelBuilder.Entity("StatementRequirement", b =>
                {
                    b.Property<Guid>("RequirementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RequirementId", "StatementId");

                    b.HasIndex("StatementId");

                    b.ToTable("StatementRequirement", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Requirement", b =>
                {
                    b.HasBaseType("Nexus.DEB.Domain.Models.Common.EntityHead");

                    b.Property<int?>("ComplianceWeighting")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReferenceDisplayed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTitleDisplayed")
                        .HasColumnType("bit");

                    b.Property<short>("RequirementCategoryId")
                        .HasColumnType("smallint");

                    b.Property<short>("RequirementTypeId")
                        .HasColumnType("smallint");

                    b.HasIndex("RequirementCategoryId");

                    b.HasIndex("RequirementTypeId");

                    b.ToTable("Requirement", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Scope", b =>
                {
                    b.HasBaseType("Nexus.DEB.Domain.Models.Common.EntityHead");

                    b.Property<DateTime?>("TargetImplementationDate")
                        .HasColumnType("datetime2");

                    b.ToTable("Scope", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.StandardVersion", b =>
                {
                    b.HasBaseType("Nexus.DEB.Domain.Models.Common.EntityHead");

                    b.Property<DateTime?>("EffectiveEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MajorVersion")
                        .HasColumnType("int");

                    b.Property<int?>("MinorVersion")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("StandardId")
                        .HasColumnType("smallint");

                    b.Property<bool>("UseVersionPrefix")
                        .HasColumnType("bit");

                    b.HasIndex("StandardId");

                    b.ToTable("StandardVersion", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Statement", b =>
                {
                    b.HasBaseType("Nexus.DEB.Domain.Models.Common.EntityHead");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ScopeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatementText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ScopeID");

                    b.ToTable("Statement", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Task", b =>
                {
                    b.HasBaseType("Nexus.DEB.Domain.Models.Common.EntityHead");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("TaskTypeId")
                        .HasColumnType("smallint");

                    b.HasIndex("StatementId");

                    b.HasIndex("TaskTypeId");

                    b.ToTable("Task", "deb");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Section", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Section", "ParentSection")
                        .WithMany("ChildSections")
                        .HasForeignKey("ParentSectionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Nexus.DEB.Domain.Models.StandardVersion", "StandardVersion")
                        .WithMany()
                        .HasForeignKey("StandardVersionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ParentSection");

                    b.Navigation("StandardVersion");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.SectionRequirement", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Requirement", "Requirement")
                        .WithMany("SectionRequirements")
                        .HasForeignKey("RequirementID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.Section", "Section")
                        .WithMany("SectionRequirements")
                        .HasForeignKey("SectionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Requirement");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("ScopeRequirement", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Requirement", null)
                        .WithMany()
                        .HasForeignKey("RequirementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.Scope", null)
                        .WithMany()
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("StandardVersionRequirement", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Requirement", null)
                        .WithMany()
                        .HasForeignKey("RequirementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.StandardVersion", null)
                        .WithMany()
                        .HasForeignKey("StandardVersionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("StatementRequirement", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Requirement", null)
                        .WithMany()
                        .HasForeignKey("RequirementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.Statement", null)
                        .WithMany()
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Requirement", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Common.EntityHead", null)
                        .WithOne()
                        .HasForeignKey("Nexus.DEB.Domain.Models.Requirement", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.RequirementCategory", "RequirementCategory")
                        .WithMany()
                        .HasForeignKey("RequirementCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.RequirementType", "RequirementType")
                        .WithMany()
                        .HasForeignKey("RequirementTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RequirementCategory");

                    b.Navigation("RequirementType");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Scope", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Common.EntityHead", null)
                        .WithOne()
                        .HasForeignKey("Nexus.DEB.Domain.Models.Scope", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.StandardVersion", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Common.EntityHead", null)
                        .WithOne()
                        .HasForeignKey("Nexus.DEB.Domain.Models.StandardVersion", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.Standard", "Standard")
                        .WithMany()
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Standard");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Statement", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Common.EntityHead", null)
                        .WithOne()
                        .HasForeignKey("Nexus.DEB.Domain.Models.Statement", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.Scope", "Scope")
                        .WithMany()
                        .HasForeignKey("ScopeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Task", b =>
                {
                    b.HasOne("Nexus.DEB.Domain.Models.Common.EntityHead", null)
                        .WithOne()
                        .HasForeignKey("Nexus.DEB.Domain.Models.Task", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.Statement", "Statement")
                        .WithMany("Tasks")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nexus.DEB.Domain.Models.TaskType", "TaskType")
                        .WithMany()
                        .HasForeignKey("TaskTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Statement");

                    b.Navigation("TaskType");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Section", b =>
                {
                    b.Navigation("ChildSections");

                    b.Navigation("SectionRequirements");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Requirement", b =>
                {
                    b.Navigation("SectionRequirements");
                });

            modelBuilder.Entity("Nexus.DEB.Domain.Models.Statement", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
